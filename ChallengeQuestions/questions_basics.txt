Questions are from the book http://www.amazon.com/Cracking-Coding-Interview-Programming-Questions/dp/098478280X

Mathematics
1. prime check - p 98
    Check for prime - naive, better, The Sieve of Eratosthenes

Recursion
2. step hops - p 109
    A child can hope either 1, 2 or 3 steps at a time
    How many possible ways he can run up a stair?

3. power set - p 109
    Compute the power set of a set
    E.g. s = {1 2 3} then P(s) = {{1},{2},{3},{1,2},{1,3},{2,3},{1,2,3},{}}
    2^n number of subsets

    Bonus: nCr give possible combinations

Java
4. 14.* in - p 145
    Does finally get executed even if we have a return in a try-catch-finally?
    Difference between final, finally, finalize?

Thrads/Locks
5. 16.5 - p 160
    Class Foo has methods one() two() three().
    Same instance of Foo is passed to three threads A,B,C.
    Thread A calls method one(), thread B calls method two and so on.
    Make sure their calls happen in order as one() two() three()

Linked list
6. remove duplicates from an unsorted linked list (what if no buffer)
7. remove c from a->b->c->d->e when given access only c
   resulting list should be like a->b->d->e

   c.value = c.next.value
   c.next = c.next.next;

Brain teaser
8. five-quart jug - p 95
    one 5 quarter jug and one 3 quarter jug (they are odd shaped)
    infinite amount of water
    Fill one EXACTLY with four quarters of water

Sorting
9. 11.1 p121
    Two sorted arrays A, B where length(A) >= #elements(A) + #elements(B)
    Merge B into A in sorted order